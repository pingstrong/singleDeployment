version: "3"
services:

  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    expose:
      - "80"
      - "443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    privileged: true
    networks:
      - spring_net

  php73:
    build:
      context: ./services/php73
      args:
        PHP_VERSION: php:${PHP73_VERSION}-fpm
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
        TZ: "$TZ"
    container_name: php73
    ports:
      - 9501:9501
      - 9502:9502
      - 9503:9503
    expose:
      - 9000
      - 9501
      - 9502
      - 9503
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    privileged: true
    cap_add:
      - SYS_PTRACE
    networks:
      - spring_net

  php72:
    build:
      context: ./services/php72
      args:
        PHP_VERSION: php:${PHP72_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP72_EXTENSIONS}
        TZ: "$TZ"
    container_name: php72
    ports:
      - 9504:9504
      - 9505:9505
      - 9506:9506
    expose:
      - 9000
      - 9504
      - 9505
      - 9506
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    privileged: true
    cap_add:
      - SYS_PTRACE
    networks:
      - spring_net


  php56:
    #build:
    #  context: ./services/php56
    #  args:
    #    PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
    #    CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
    #    PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
    #    TZ: "$TZ"
    image: pingstrong/php56:v1
    container_name: php56
    expose:
      - 9501
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    privileged: true
    cap_add:
      - SYS_PTRACE
    networks:
      - spring_net

 
  mariadb:
    image: mariadb:${MARIADB_VERSION}
    container_name: mariadb
    volumes:
      - /etc/localtime:/etc/localtime
      - ${DATA_DIR}/mariadb:/var/lib/mysql
      - ${MARIADB_CONF_FILE}:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD} #root password show in log in: db_1   | GENERATED ROOT PASSWORD: ...
    ports:
      - "${MARIADB_HOST_PORT}:3306"
    restart: always
    privileged: true
    networks:
      - spring_net


  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    privileged: true
    entrypoint: ["redis-server", "/etc/redis.conf"]
    #command: redis-server --port 6379 --requirepass taokin2020  --appendonly yes
    environment:
      TZ: "$TZ"
    networks:
      - spring_net
  
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - ${ADMINER_HOST_PORT}:8080
    networks:
      - spring_net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    volumes:
      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
    networks:
      - spring_net
    restart: always
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=3306
      - TZ=$TZ

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: phpredisadmin
    ports:
      - "${REDISMYADMIN_HOST_PORT}:80"
    networks:
      - spring_net
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - ADMIN_USER=${REDIS_ADMIN_USER}
      - ADMIN_PASS=${REDIS_ADMIN_PASS}
      - REDIS_1_AUTH=${REDIS_ADMIN_AUTH}
      - TZ=$TZ

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:${MONGODB_CONTAINER_PORT}"
    restart: always
    privileged: true
    networks:
       - spring_net
    command:
       --auth

  adminmongo:
    image: mrvautin/adminmongo
    container_name: adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    volumes:
      - ${ADMINMONGO_CONF_FILE}:/app/user/config/app.json
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=${MONGODB_CONTAINER_PORT}
    networks:
      - spring_net

#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    ports:
#      - "${MONGOEXPRESS_PORT}:8081"
#    environment:
#      - ME_CONFIG_MONGODB_PORT=${MONGODB_CONTAINER_PORT}
#      - ME_CONFIG_MONGODB_SERVER="mongodb"
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_INITDB_ROOT_USERNAME}
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_INITDB_ROOT_PASSWORD}
#      - ME_CONFIG_BASICAUTH_USERNAME="user"
#      - ME_CONFIG_BASICAUTH_PASSWORD="fairlypassword"
#    restart: always
#    networks:
#      - spring_net

#  elasticsearch:
#    build:
#      context: ./services/elasticsearch
#      args:
#        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
#        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
#    container_name: elasticsearch
#    environment:
#      - TZ=$TZ
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
#      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
#    hostname: elasticsearch
#    restart: always
#    ports:
#      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
#      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

#  kibana:
#    image: kibana:${KIBANA_VERSION}
#    container_name: kibana
#    environment:
#      TZ: "$TZ"
#      elasticsearch.hosts: http://elasticsearch:9200
#    hostname: kibana
#    depends_on:
#      - elasticsearch
#    restart: always
#    ports:
#      - "${KIBANA_HOST}:5601"

#  logstash:
#    image: logstash:${LOGSTASH_VERSION}
#    container_name: logstash
#    hostname: logstash
#    restart: always
#    depends_on:
#      - elasticsearch
#    environment:
#      TZ: "$TZ"
#    ports:
#      - "${LOGSTASH_HOST_PORT_C}:9600"
#      - "${LOGSTASH_HOST_PORT_S}:5044"

#  gitlab:
#    image: gitlab/gitlab-ce:latest
#    container_name: gitlab
#    ports:
#      - '3080:80'
#      - '3443:443'
#      - '3022:22'
#    expose:
#      - 443
#      - 80
#      - 22
#    volumes:
#      - ${GITLAB_CONF_DIR}:/etc/gitlab
#      - ${GITLAB_LOG_DIR}:/var/log/gitlab
#      - ${GITLAB_DATA_DIR}:/var/opt/gitlab:rw
#    environment:
#      - TZ="$TZ"
#    restart: always
#    privileged: true
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - spring_net

 

  #yapi:
  #  image: thinkpanax/yapi:v1.0.1
  #  container_name: yapi
    #ports:
    #  - 8069:3000
  #  expose:
  #    - 3000
  #  volumes:
  #    - ${YAPI_CONF_FILE}:/yapi/config.json:rw
  #  environment:
  #    - YAPI_ADMIN_ACCOUNT=${YAPI_ADMIN_ACCOUNT}
  #    - YAPI_ADMIN_PASSWORD=${YAPI_ADMIN_PASSWORD}
  #    - YAPI_CLOSE_REGISTER=${YAPI_CLOSE_REGISTER}
  #    - YAPI_DB_SERVERNAME=mongodb
  #    - YAPI_DB_PORT=27017
  #    - YAPI_DB_DATABASE=yapi
  #    - YAPI_MAIL_ENABLE=false
  #    - YAPI_LDAP_LOGIN_ENABLE=false
  #    - YAPI_PLUGINS=[]
  #  depends_on:
  #    - mongodb
  #  links:
  #    - mongodb
  #  restart: always
  #  privileged: true
  #  cap_add:
  #    - SYS_PTRACE
  #  networks:
  #    - spring_net

  ossrs:
      image: ossrs/srs:latest
      container_name: ossrs
      ports:
        - "${OSSRS_PUBLISH_PORT}:1935"
        - "${OSSRS_API_PORT}:1985"
        - "${OSSRS_HTTP_PORT}:8080"
      volumes:
        - ${OSSRS_CONF_FILE}:/usr/local/srs/conf/srs.conf
        - ${OSSRS_LOG_FILE}:/usr/local/srs/objs/srs.log
        #- ${OSSRS_DVR_PATH}:/usr/local/srs/objs/nginx/html
      #environment:
      #  - HOST=0.0.0.0
      #  - DB_HOST=mongodb
      #  - DB_PORT=${MONGODB_CONTAINER_PORT}
      restart: always
      networks:
        - spring_net

  portainer:
      container_name: portainer
      image: portainer/portainer
      restart: always
      #ports:
      #  - "${PORTAINER_PORT}:9000"
      command: -H unix:///var/run/docker.sock
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - portainer_data:/data
      environment:
         - ADMIN_PASSWORD=${PORTAINER_PASSWORD}
      networks:
        - spring_net


############################################
volumes:
  portainer_data:
networks:
  spring_net:
