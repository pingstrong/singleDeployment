version: "3"
services:

  haproxy:
    image: ${HAPROXY_VERSION}
    container_name: haproxy
    volumes:
      - ${HAPROXY_CONF_FILE}:/usr/local/etc/haproxy/haproxy.cfg # haproxy的配置文件路径
    links:
      - nginx_node1
      - nginx_node2
    depends_on:
      - nginx_node1
      - nginx_node2
    ports:
      - "${HAPROXY_PORT}:80"  # 端口转换
      - "${HAPROXY_DBS_PORT}:8888"
      - "443:443"
    expose:
      - 80   # haproxy对外暴露的端口
      - 443
    networks:
      - thinkpanax_net

  nginx_node1:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx_node1
    #ports:
    #  - "${NGINX_HTTP_HOST_PORT}:80"
    #  - "${NGINX_HTTPS_HOST_PORT}:443"
    expose:
      - "80"
      - "443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    privileged: true
    networks:
      - thinkpanax_net


  nginx_node2:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx_node2
    #ports:
    #  - "${NGINX_HTTP_HOST_PORT}:80"
    #  - "${NGINX_HTTPS_HOST_PORT}:443"
    expose:
      - "80"
      - "443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    privileged: true
    networks:
      - thinkpanax_net

  #php74:
  #  build:
  #    context: ./services/php74
  #    args:
  #      PHP_VERSION: php:${PHP74_VERSION}-fpm-alpine
  #      CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #      PHP_EXTENSIONS: ${PHP74_EXTENSIONS}
  #      TZ: "$TZ"
  #  container_name: php74
  #  expose:
  #    - 9501
  #  extra_hosts:
  #    - "www.site1.com:172.17.0.1"
  #  volumes:
  #    - ${SOURCE_DIR}:/www/:rw
  #    - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
  #    - ${PHP74_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
  #    - ${PHP74_LOG_DIR}:/var/log/php
  #    - ${DATA_DIR}/composer:/tmp/composer
  #  restart: always
  #  privileged: true
  #  cap_add:
  #    - SYS_PTRACE
  #  networks:
  #    - thinkpanax_net


  php73:
    build:
      context: ./services/php73
      args:
        PHP_VERSION: php:${PHP73_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
        TZ: "$TZ"
    container_name: php73
    expose:
      - 9501
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    privileged: true
    cap_add:
      - SYS_PTRACE
    networks:
      - thinkpanax_net

  php72_crontab:
    image: thinkpanax/php72:v1.0.1
    container_name: php72_crontab
    expose:
      - 9501
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    privileged: true
    cap_add:
      - SYS_PTRACE
    networks:
      - thinkpanax_net


  php72:
    build:
      context: ./services/php72
      args:
        PHP_VERSION: php:${PHP72_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP72_EXTENSIONS}
        TZ: "$TZ"
    container_name: php72
    expose:
      - 9501
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    privileged: true
    cap_add:
      - SYS_PTRACE
    networks:
      - thinkpanax_net


  php56:
    build:
      context: ./services/php56
      args:
        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        TZ: "$TZ"
    container_name: php56
    expose:
      - 9501
    volumes:
      - /etc/localtime:/etc/localtime
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - thinkpanax_net

#  php54:
#    build:
#      context: ./services/php54
#      args:
#        PHP_VERSION: php:${PHP54_VERSION}-fpm
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP54_EXTENSIONS}
#        TZ: "$TZ"
#    container_name: php54
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP54_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP54_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP54_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - thinkpanax_net

  mariadb:
    image: mariadb:${MARIADB_VERSION}
    container_name: mariadb
    volumes:
      - /etc/localtime:/etc/localtime
      - ${DATA_DIR}/mariadb:/var/lib/mysql
      - ${MARIADB_CONF_FILE}:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD} #root password show in log in: db_1   | GENERATED ROOT PASSWORD: ...
    ports:
      - "${MARIADB_HOST_PORT}:3306"
    restart: always
    privileged: true
    networks:
      - thinkpanax_net

  mysql8:
    image: mysql:${MYSQL8_VERSION}
    container_name: mysql8
    ports:
      - "${MYSQL8_HOST_PORT}:3306"
    volumes:
      - ${MYSQL8_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql8:/var/lib/mysql/:rw
    restart: always
    privileged: true
    networks:
      - thinkpanax_net
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL8_ROOT_PASSWORD}"
      TZ: "$TZ"


  #percona-mysql8:
  #  image: percona:${PERCONA_VERSION}
  #  container_name: percona-mysql8
  #  environment:
  #    MYSQL_ROOT_PASSWORD: ${PERCONA_MYSQL_ROOT_PASSWORD}
  #    MYSQL_USER: ${PERCONA_MYSQL_USER}
  #    MYSQL_PASSWORD: ${PERCONA_MYSQL_PASSWORD}
  #    MYSQL_DATABASE: ${PERCONA_MYSQL_DATABASE}
  #    INIT_TOKUDB: 1
  #    INIT_ROCKSDB: 1
  #  ports:
  #    - "${PERCONA_PORT}:3306"
  #  volumes:
      #
  #    - ${DATA_DIR}/percona:/var/lib/mysql
      #
  #    - ${PERCONA_CONF_FILE}:/etc/mysql/conf.d
  #  restart: always
  #  privileged: true
  #  networks:
  #    - thinkpanax_net

#  mysql5:
#    image: mysql:${MYSQL5_VERSION}
#    container_name: mysql5
#    ports:
#      - "${MYSQL5_HOST_PORT}:3306"
#    volumes:
#      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
#      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
#    restart: always
#    privileged: true
#    networks:
#      - thinkpanax_net
#    environment:
#      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
#      TZ: "$TZ"

#  openresty:
#    image:  openresty/openresty:${OPENRESTY_VERSION}
#    container_name: openresty
#    ports:
#       - "${OPENRESTY_HTTP_HOST_PORT}:80"
#       - "${OPENRESTY_HTTPS_HOST_PORT}:443"
#    volumes:
#       - ${SOURCE_DIR}:/www/:rw
#       - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
#       - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
#       - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
#       - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
#       - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
#       - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
#    environment:
#      TZ: "$TZ"
#    networks:
#      - thinkpanax_net

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    privileged: true
    entrypoint: ["redis-server", "/etc/redis.conf"]
    #command: redis-server --port 6379 --requirepass taokin2020  --appendonly yes
    environment:
      TZ: "$TZ"
    networks:
      - thinkpanax_net

#  memcached:
#    image: memcached:${MEMCACHED_VERSION}
#    container_name: memcached
#    ports:
#      - "${MEMCACHED_HOST_PORT}:11211"
#    environment:
#       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
#    networks:
#      - thinkpanax_net

#  rabbitmq:
#    image: rabbitmq:${RABBITMQ_VERSION}
#    container_name: rabbitmq
#    restart: always
#    ports:
#      - "${RABBITMQ_HOST_PORT_C}:5672"
#      - "${RABBITMQ_HOST_PORT_S}:15672"
#    environment:
#       TZ: "$TZ"
#       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
#       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
#    networks:
#          - thinkpanax_net
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - ${ADMINER_HOST_PORT}:8080
    networks:
      - thinkpanax_net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    volumes:
      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
    networks:
      - thinkpanax_net
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=3306
      - TZ=$TZ

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    container_name: phpredisadmin
    ports:
      - "${REDISMYADMIN_HOST_PORT}:80"
    networks:
      - thinkpanax_net
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - ADMIN_USER=${REDIS_ADMIN_USER}
      - ADMIN_PASS=${REDIS_ADMIN_PASS}
      - REDIS_1_AUTH=${REDIS_ADMIN_AUTH}
      - TZ=$TZ

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:${MONGODB_CONTAINER_PORT}"
    networks:
       - thinkpanax_net
    command:
       --auth

  adminmongo:
    image: mrvautin/adminmongo
    container_name: adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    volumes:
      - ${ADMINMONGO_CONF_FILE}:/app/user/config/app.json
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=${MONGODB_CONTAINER_PORT}
    networks:
      - thinkpanax_net

#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    ports:
#      - "${MONGOEXPRESS_PORT}:8081"
#    environment:
#      - ME_CONFIG_MONGODB_PORT=${MONGODB_CONTAINER_PORT}
#      - ME_CONFIG_MONGODB_SERVER="mongodb"
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_INITDB_ROOT_USERNAME}
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_INITDB_ROOT_PASSWORD}
#      - ME_CONFIG_BASICAUTH_USERNAME="user"
#      - ME_CONFIG_BASICAUTH_PASSWORD="fairlypassword"
#    restart: always
#    networks:
#      - thinkpanax_net

#  elasticsearch:
#    build:
#      context: ./services/elasticsearch
#      args:
#        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
#        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
#    container_name: elasticsearch
#    environment:
#      - TZ=$TZ
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
#      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
#    hostname: elasticsearch
#    restart: always
#    ports:
#      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
#      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

#  kibana:
#    image: kibana:${KIBANA_VERSION}
#    container_name: kibana
#    environment:
#      TZ: "$TZ"
#      elasticsearch.hosts: http://elasticsearch:9200
#    hostname: kibana
#    depends_on:
#      - elasticsearch
#    restart: always
#    ports:
#      - "${KIBANA_HOST}:5601"

#  logstash:
#    image: logstash:${LOGSTASH_VERSION}
#    container_name: logstash
#    hostname: logstash
#    restart: always
#    depends_on:
#      - elasticsearch
#    environment:
#      TZ: "$TZ"
#    ports:
#      - "${LOGSTASH_HOST_PORT_C}:9600"
#      - "${LOGSTASH_HOST_PORT_S}:5044"

#  gitlab:
#    image: gitlab/gitlab-ce:latest
#    container_name: gitlab
#    ports:
#      - '3080:80'
#      - '3443:443'
#      - '3022:22'
#    expose:
#      - 443
#      - 80
#      - 22
#    volumes:
#      - ${GITLAB_CONF_DIR}:/etc/gitlab
#      - ${GITLAB_LOG_DIR}:/var/log/gitlab
#      - ${GITLAB_DATA_DIR}:/var/opt/gitlab:rw
#    environment:
#      - TZ="$TZ"
#    restart: always
#    privileged: true
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - thinkpanax_net

###  禅道默认管理员账号密码  admin/123456
#  zentao:
#    image: idoop/zentao:latest
#    container_name: zentao
#    #ports:
    #  - '3080:80'
    #  - '3443:3306'
#    expose:
#      - 80
#      - 3306
#    volumes:
#      - ${ZENTAO_DATA_DIR}:/opt/zbox/:rw
#    environment:
#      - TZ="$TZ"
#      - ADMINER_USER=${ZENTAO_ADMINER_USER}
#      - ADMINER_PASSWD=${ZENTAO_ADMINER_PASSWD}
#      - BIND_ADDRESS=${ZENTAO_BIND_ADDRESS}
#    restart: always
#    privileged: true
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - thinkpanax_net

  #yapi:
  #  image: thinkpanax/yapi:v1.0.1
  #  container_name: yapi
    #ports:
    #  - 8069:3000
  #  expose:
  #    - 3000
  #  volumes:
  #    - ${YAPI_CONF_FILE}:/yapi/config.json:rw
  #  environment:
  #    - YAPI_ADMIN_ACCOUNT=${YAPI_ADMIN_ACCOUNT}
  #    - YAPI_ADMIN_PASSWORD=${YAPI_ADMIN_PASSWORD}
  #    - YAPI_CLOSE_REGISTER=${YAPI_CLOSE_REGISTER}
  #    - YAPI_DB_SERVERNAME=mongodb
  #    - YAPI_DB_PORT=27017
  #    - YAPI_DB_DATABASE=yapi
  #    - YAPI_MAIL_ENABLE=false
  #    - YAPI_LDAP_LOGIN_ENABLE=false
  #    - YAPI_PLUGINS=[]
  #  depends_on:
  #    - mongodb
  #  links:
  #    - mongodb
  #  restart: always
  #  privileged: true
  #  cap_add:
  #    - SYS_PTRACE
  #  networks:
  #    - thinkpanax_net

############################################

networks:
  thinkpanax_net:
